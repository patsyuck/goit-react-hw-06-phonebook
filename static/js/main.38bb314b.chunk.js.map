{"version":3,"sources":["redux/actions.js","redux/store.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["addContact","createAction","deleteContact","filterContacts","initialState","contacts","JSON","parse","localStorage","getItem","filter","reducer","createReducer","state","payload","some","item","name","toLowerCase","alert","newState","setItem","stringify","id","target","value","store","configureStore","INITIAL_STATE","number","ContactForm","handleChange","setState","reset","handleSubmit","e","preventDefault","contact","uuid","props","handlerSubmit","this","className","onSubmit","onChange","type","Component","Filter","ContactItem","onClick","ContactList","friends","indexOf","map","friend","connect","dispatch","handleInput","event","handleDelete","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38bb314b.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction('ADD_CONTACT');\nexport const deleteContact = createAction('DELETE_CONTACT');\nexport const filterContacts = createAction('FILTER_CONTACTS');\n","import { configureStore, createReducer } from '@reduxjs/toolkit';\nimport { addContact, deleteContact, filterContacts } from './actions';\n\n/*import { combineReducers } from '@reduxjs/toolkit';\nimport {persistStore, persistReducer} from \"redux-persist\";\nimport storage from 'redux-persist/lib/storage';\n\nconst persistConfig = {\n  key: 'secret',\n  storage\n}*/\n\nconst initialState = {\n  contacts: JSON.parse(localStorage.getItem('phones')) || [],\n  filter: '',\n};\n\nconst reducer = createReducer(initialState, {\n  [addContact]: (state, { payload }) => {\n    if (\n      state.contacts.some(\n        item => item.name.toLowerCase() === payload.name.toLowerCase(),\n      )\n    ) {\n      alert(`${payload.name} is already in contacts!`);\n      return state;\n    } else {\n      const newState = {\n        contacts: [...state.contacts, payload],\n        filter: state.filter,\n      };\n      localStorage.setItem('phones', JSON.stringify(newState.contacts));\n      return newState;\n    }\n  },\n  [deleteContact]: (state, { payload }) => {\n    const newState = {\n      contacts: state.contacts.filter(item => item.id !== payload),\n      filter: state.filter,\n    };\n    localStorage.setItem('phones', JSON.stringify(newState.contacts));\n    return newState;\n  },\n  [filterContacts]: (state, { payload }) => ({\n    contacts: state.contacts,\n    filter: payload.target.value,\n  }),\n});\n\nconst store = configureStore({\n  reducer: {\n    reducer,\n  },\n});\n\n/*const persistedReducer = persistReducer(persistConfig,\n  combineReducers({ reducer })\n)\nconst store = configureStore({\n  reducer: {\n    persistedReducer,\n  },\n});\nconst persistor = persistStore(store)*/\n\n/* eslint import/no-anonymous-default-export: [2, {\"allowObject\": true}] */\n/*export default { store, persistor };*/\n\nexport default store;\n","import React, { Component } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport './ContactForm.css';\n\nconst INITIAL_STATE = {\n  name: '',\n  number: '',\n};\n\nexport class ContactForm extends Component {\n  state = { ...INITIAL_STATE };\n\n  handleChange = ({ target }) => {\n    const { name, value } = target;\n    this.setState({ [name]: value });\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number } = this.state;\n\n    const contact = {\n      id: uuid(),\n      name: name,\n      number: number,\n    };\n    this.props.handlerSubmit(contact);\n\n    this.reset();\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <form className=\"form\" onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input name=\"name\" value={name} onChange={this.handleChange} />\n        </label>\n        <label>\n          Number\n          <input name=\"number\" value={number} onChange={this.handleChange} />\n        </label>\n        <button type=\"submit\">Add contact</button>\n      </form>\n    );\n  }\n}\n","import './Filter.css';\n\nconst Filter = ({ filter, onChange }) => {\n  return (\n    <div className=\"filter\">\n      <label>\n        Find contacts by name\n        <input value={filter} onChange={onChange} />\n      </label>\n    </div>\n  );\n};\n\nexport default Filter;\n","import './ContactItem.css';\n\nconst ContactItem = ({ id, name, number, onClick }) => {\n  return (\n    <li className=\"item\">\n      {name}: {number}\n      <button\n        onClick={() => {\n          onClick(id);\n        }}\n      >\n        Delete\n      </button>\n    </li>\n  );\n};\n\nexport default ContactItem;\n","import ContactItem from '../ContactItem/ContactItem';\n\nconst ContactList = ({ friends, filter, onClick }) => {\n  return (\n    <ul>\n      {friends\n        .filter(\n          item => item.name.toLowerCase().indexOf(filter.toLowerCase()) >= 0,\n        )\n        .map(friend => (\n          <ContactItem\n            key={friend.id}\n            id={friend.id}\n            name={friend.name}\n            number={friend.number}\n            onClick={onClick}\n          />\n        ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addContact, deleteContact, filterContacts } from './redux/actions';\nimport { ContactForm } from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App({ friends, filter, handleInput, handleSubmit, handleDelete }) {\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm handlerSubmit={contact => handleSubmit(contact)} />\n      <h2>Contacts</h2>\n      <Filter filter={filter} onChange={event => handleInput(event)} />\n      <ContactList\n        friends={friends}\n        filter={filter}\n        onClick={id => handleDelete(id)}\n      />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    friends: state.reducer.contacts,\n    filter: state.reducer.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    handleInput: event => dispatch(filterContacts(event)),\n    handleSubmit: contact => dispatch(addContact(contact)),\n    handleDelete: id => dispatch(deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\nimport App from './App';\n/*import bigStore from './redux/store';\nimport {PersistGate} from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={bigStore.store}>\n      <PersistGate loading={null} persistor={bigStore.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);*/\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}